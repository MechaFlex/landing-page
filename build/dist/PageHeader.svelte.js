import './PageHeader.svelte.css.proxy.js';
/* src\PageHeader.svelte generated by Svelte v3.37.0 */
import {
	SvelteComponent,
	append,
	attr,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	listen,
	mount_component,
	null_to_empty,
	run_all,
	safe_not_equal,
	set_style,
	space,
	transition_in,
	transition_out
} from "../_snowpack/pkg/svelte/internal.js";

import { getContext } from "../_snowpack/pkg/svelte.js";
import Signature from "./Signature.svelte.js";
import { firstPageHeader } from "./stores.js";

function create_fragment(ctx) {
	let div4;
	let div3;
	let div0;
	let div0_style_value;
	let t0;
	let div2;
	let div1;
	let signature;
	let div1_style_value;
	let t1;
	let span0;
	let t3;
	let span1;
	let div3_class_value;
	let current;
	let mounted;
	let dispose;
	signature = new Signature({});

	return {
		c() {
			div4 = element("div");
			div3 = element("div");
			div0 = element("div");
			t0 = space();
			div2 = element("div");
			div1 = element("div");
			create_component(signature.$$.fragment);
			t1 = space();
			span0 = element("span");
			span0.textContent = "Projects";
			t3 = space();
			span1 = element("span");
			span1.textContent = "Reach";
			attr(div0, "style", div0_style_value = ` ${/*headerValue*/ ctx[0] && "opacity: 0"}`);
			attr(div0, "class", "headerBackground svelte-qy4cx2");
			attr(div1, "style", div1_style_value = ` filter: invert(0%); transition: filter 500ms; ${/*headerValue*/ ctx[0] && "filter: invert(100%);"}`);
			attr(div1, "class", "signatureWrapper svelte-qy4cx2");
			set_style(span0, "--reveal-delay", "0");
			attr(span0, "class", "headerItem svelte-qy4cx2");
			set_style(span1, "--reveal-delay", "1");
			attr(span1, "class", "headerItem svelte-qy4cx2");
			attr(div2, "class", "headerWidth svelte-qy4cx2");
			attr(div3, "class", div3_class_value = "" + (null_to_empty(`header ${/*headerValue*/ ctx[0] && "headerAltColors"}`) + " svelte-qy4cx2"));
		},
		m(target, anchor) {
			insert(target, div4, anchor);
			append(div4, div3);
			append(div3, div0);
			append(div3, t0);
			append(div3, div2);
			append(div2, div1);
			mount_component(signature, div1, null);
			append(div2, t1);
			append(div2, span0);
			append(div2, t3);
			append(div2, span1);
			current = true;

			if (!mounted) {
				dispose = [
					listen(div1, "click", /*click_handler*/ ctx[2]),
					listen(span0, "click", /*click_handler_1*/ ctx[3]),
					listen(span1, "click", /*click_handler_2*/ ctx[4])
				];

				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (!current || dirty & /*headerValue*/ 1 && div0_style_value !== (div0_style_value = ` ${/*headerValue*/ ctx[0] && "opacity: 0"}`)) {
				attr(div0, "style", div0_style_value);
			}

			if (!current || dirty & /*headerValue*/ 1 && div1_style_value !== (div1_style_value = ` filter: invert(0%); transition: filter 500ms; ${/*headerValue*/ ctx[0] && "filter: invert(100%);"}`)) {
				attr(div1, "style", div1_style_value);
			}

			if (!current || dirty & /*headerValue*/ 1 && div3_class_value !== (div3_class_value = "" + (null_to_empty(`header ${/*headerValue*/ ctx[0] && "headerAltColors"}`) + " svelte-qy4cx2"))) {
				attr(div3, "class", div3_class_value);
			}
		},
		i(local) {
			if (current) return;
			transition_in(signature.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(signature.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div4);
			destroy_component(signature);
			mounted = false;
			run_all(dispose);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let headerValue = true;

	firstPageHeader.subscribe(val => {
		$$invalidate(0, headerValue = val);
	});

	const { scrollToSlide } = getContext("scroller");
	const click_handler = () => scrollToSlide();
	const click_handler_1 = () => scrollToSlide(1);
	const click_handler_2 = () => scrollToSlide(2);
	return [headerValue, scrollToSlide, click_handler, click_handler_1, click_handler_2];
}

class PageHeader extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default PageHeader;