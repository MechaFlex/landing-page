import './Projects.svelte.css.proxy.js';
/* src\Projects.svelte generated by Svelte v3.37.0 */
import {
	SvelteComponent,
	append,
	attr,
	destroy_each,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	space,
	text
} from "../_snowpack/pkg/svelte/internal.js";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[1] = list[i];
	return child_ctx;
}

// (118:3) {#each projects as project}
function create_each_block(ctx) {
	let a;
	let div0;
	let t0_value = /*project*/ ctx[1].title + "";
	let t0;
	let t1;
	let div1;
	let t2_value = /*project*/ ctx[1].text + "";
	let t2;
	let t3;
	let div3;
	let div2;
	let t4_value = /*project*/ ctx[1].title + "";
	let t4;
	let div3_style_value;
	let t5;
	let a_href_value;

	return {
		c() {
			a = element("a");
			div0 = element("div");
			t0 = text(t0_value);
			t1 = space();
			div1 = element("div");
			t2 = text(t2_value);
			t3 = space();
			div3 = element("div");
			div2 = element("div");
			t4 = text(t4_value);
			t5 = space();
			attr(div0, "class", "prTitle svelte-13o8950");
			attr(div1, "class", "prText svelte-13o8950");
			attr(div2, "class", "prOverlayTitle svelte-13o8950");
			attr(div3, "style", div3_style_value = `background-image: url(Images/Projects/${/*project*/ ctx[1].imgurl});`);
			attr(div3, "class", "prOverlay svelte-13o8950");
			attr(a, "class", "prGridElement svelte-13o8950");
			attr(a, "href", a_href_value = /*project*/ ctx[1].url);
		},
		m(target, anchor) {
			insert(target, a, anchor);
			append(a, div0);
			append(div0, t0);
			append(a, t1);
			append(a, div1);
			append(div1, t2);
			append(a, t3);
			append(a, div3);
			append(div3, div2);
			append(div2, t4);
			append(a, t5);
		},
		p: noop,
		d(detaching) {
			if (detaching) detach(a);
		}
	};
}

function create_fragment(ctx) {
	let div2;
	let div1;
	let div0;
	let each_value = /*projects*/ ctx[0];
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	return {
		c() {
			div2 = element("div");
			div1 = element("div");
			div0 = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			attr(div0, "class", "prGrid svelte-13o8950");
			attr(div1, "class", "prWrapper svelte-13o8950");
		},
		m(target, anchor) {
			insert(target, div2, anchor);
			append(div2, div1);
			append(div1, div0);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div0, null);
			}
		},
		p(ctx, [dirty]) {
			if (dirty & /*projects*/ 1) {
				each_value = /*projects*/ ctx[0];
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(div0, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div2);
			destroy_each(each_blocks, detaching);
		}
	};
}

function instance($$self) {
	"use strict";

	const projects = [
		{
			title: "Bingo",
			text: "Bingo is an online bingo board with two teams made for speedrun bingo races. It's made with vanilla JS and runs on a Node Express server.",
			url: "http://bingo.mechaflex.ml",
			imgurl: "bingo.jpg"
		},
		{
			title: "Sort",
			text: "This website let's you sort any list using the merge sort algorithm. The twist is that you do all the comparisons yourself. It is the first project I made using Svelte.",
			url: "http://sort.mechaflex.ml",
			imgurl: "sort.jpg"
		},
		{
			title: "Hanna Abrahamsson",
			text: "This is a webpage I made for a cross country skier. It's built using vanilla HTML, CSS and JS as well as some PHP.",
			url: "https://hannaabrahamsson.se",
			imgurl: "hanna.jpg"
		},
		{
			title: "Top List",
			text: "This was the second webpage I made during the second half of the web development course. It is made using vanilla HTML and CSS and jQuery with PHP to save the list.",
			url: "http://topplista.mechaflex.ml",
			imgurl: "topplista.jpg"
		},
		{
			title: "Minecraft",
			text: "This was the first webpage I made during the first half of the web development course at GKC. Made using HTML and CSS.",
			url: "http://minecraft.mechaflex.ml",
			imgurl: "minecraft.jpg"
		}
	];

	return [projects];
}

class Projects extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default Projects;